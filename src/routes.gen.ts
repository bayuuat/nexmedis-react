/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./app/__root"
import { Route as BaseImport } from "./app/_base"
import { Route as RegisterIndexImport } from "./app/register/index"
import { Route as LoginIndexImport } from "./app/login/index"
import { Route as BaseIndexImport } from "./app/_base/index"
import { Route as BasePostIdPostImport } from "./app/_base/$postId/_post"
import { Route as BasePostIdPostIndexImport } from "./app/_base/$postId/_post.index"

// Create Virtual Routes

const BasePostIdImport = createFileRoute("/_base/$postId")()

// Create/Update Routes

const BaseRoute = BaseImport.update({
  id: "/_base",
  getParentRoute: () => rootRoute,
} as any)

const BasePostIdRoute = BasePostIdImport.update({
  path: "/$postId",
  getParentRoute: () => BaseRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  path: "/register/",
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: "/login/",
  getParentRoute: () => rootRoute,
} as any)

const BaseIndexRoute = BaseIndexImport.update({
  path: "/",
  getParentRoute: () => BaseRoute,
} as any)

const BasePostIdPostRoute = BasePostIdPostImport.update({
  id: "/_post",
  getParentRoute: () => BasePostIdRoute,
} as any)

const BasePostIdPostIndexRoute = BasePostIdPostIndexImport.update({
  path: "/",
  getParentRoute: () => BasePostIdPostRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_base": {
      id: "/_base"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof BaseImport
      parentRoute: typeof rootRoute
    }
    "/_base/": {
      id: "/_base/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof BaseIndexImport
      parentRoute: typeof BaseImport
    }
    "/login/": {
      id: "/login/"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    "/register/": {
      id: "/register/"
      path: "/register"
      fullPath: "/register"
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    "/_base/$postId": {
      id: "/_base/$postId"
      path: "/$postId"
      fullPath: "/$postId"
      preLoaderRoute: typeof BasePostIdImport
      parentRoute: typeof BaseImport
    }
    "/_base/$postId/_post": {
      id: "/_base/$postId/_post"
      path: "/$postId"
      fullPath: "/$postId"
      preLoaderRoute: typeof BasePostIdPostImport
      parentRoute: typeof BasePostIdRoute
    }
    "/_base/$postId/_post/": {
      id: "/_base/$postId/_post/"
      path: "/"
      fullPath: "/$postId/"
      preLoaderRoute: typeof BasePostIdPostIndexImport
      parentRoute: typeof BasePostIdPostImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  BaseRoute: BaseRoute.addChildren({
    BaseIndexRoute,
    BasePostIdRoute: BasePostIdRoute.addChildren({
      BasePostIdPostRoute: BasePostIdPostRoute.addChildren({
        BasePostIdPostIndexRoute,
      }),
    }),
  }),
  LoginIndexRoute,
  RegisterIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_base",
        "/login/",
        "/register/"
      ]
    },
    "/_base": {
      "filePath": "_base.tsx",
      "children": [
        "/_base/",
        "/_base/$postId"
      ]
    },
    "/_base/": {
      "filePath": "_base/index.tsx",
      "parent": "/_base"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/_base/$postId": {
      "filePath": "_base/$postId",
      "parent": "/_base",
      "children": [
        "/_base/$postId/_post"
      ]
    },
    "/_base/$postId/_post": {
      "filePath": "_base/$postId/_post.tsx",
      "parent": "/_base/$postId",
      "children": [
        "/_base/$postId/_post/"
      ]
    },
    "/_base/$postId/_post/": {
      "filePath": "_base/$postId/_post.index.tsx",
      "parent": "/_base/$postId/_post"
    }
  }
}
ROUTE_MANIFEST_END */
